name: Wagtail CI

on:
  push:
  pull_request:

jobs:
  test-sqlite:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - python: 3.7
            django: "Django>=3.0,<3.1"
          - python: 3.9
            django: "Django>=3.1,<3.2"

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "${{ matrix.django }}"
          pip install -e .[testing]
      - name: Test
        run: |
          ./runtests.py
        env:
          DATABASE_ENGINE: django.db.backends.sqlite3

  test-postgres:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        include:
          - python: 3.8
            django: "Django>=3.1,<3.2"
            experimental: false
          - python: 3.9
            django: "Django>=3.1,<3.2"
            emailuser: emailuser
            experimental: false
          - python: 3.9
            django: "Django>=3.1,<3.2"
            notz: notz
            experimental: false
          - python: 3.9
            django: "git+https://github.com/django/django.git@stable/3.1.x#egg=Django"
            experimental: true
          - python: 3.9
            django: "git+https://github.com/django/django.git@master#egg=Django"
            experimental: true

    services:
      postgres:
        image: postgres:10.8
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "psycopg2>=2.6"
          pip install "${{ matrix.django }}"
          pip install -e .[testing]
      - name: Test
        run: |
          ./runtests.py
        env:
          DATABASE_ENGINE: django.db.backends.postgresql
          DATABASE_HOST: localhost
          DATABASE_USER: postgres
          DATABASE_PASS: postgres
          USE_EMAIL_USER_MODEL: ${{ matrix.emailuser }}
          DISABLE_TIMEZONE: ${{ matrix.notz }}

  test-mysql:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - python: 3.6
            django: "Django>=2.2,<3.0"
          - python: 3.9
            django: "Django>=3.1,<3.2"

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: wagtail
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "mysqlclient>=1.4,<2"
          pip install "${{ matrix.django }}"
          pip install -e .[testing]
      - name: Test
        run: |
          ./runtests.py
        env:
          DATABASE_ENGINE: django.db.backends.mysql
          DATABASE_HOST: "127.0.0.1"
          DATABASE_USER: root

  test-sqlite-elasticsearch:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - python: 3.6
            django: "Django>=2.2,<3.0"
            elasticsearch: 6.8.9
            elasticsearchpy: "elasticsearch>=6,<7"
            elasticsearchflag: "--elasticsearch6"
          - python: 3.9
            django: "Django>=3.1,<3.2"
            elasticsearch: 7.6.1
            elasticsearchpy: "elasticsearch>=7,<8"
            elasticsearchflag: "--elasticsearch7"
            emailuser: emailuser
    steps:
      - name: Configure sysctl limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144
      - uses: getong/elasticsearch-action@v1.2
        with:
          elasticsearch version: ${{ matrix.elasticsearch }}
          host port: 9200
          container port: 9200
          host node port: 9300
          node port: 9300
          discovery type: 'single-node'
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "${{ matrix.django }}"
          pip install -e .[testing]
          pip install "${{ matrix.elasticsearchpy }}"
          pip install certifi
      - name: Test
        run: |
          ./runtests.py wagtail.search wagtail.documents wagtail.images ${{ matrix.elasticsearchflag }}
        env:
          DATABASE_ENGINE: django.db.backends.sqlite3
          USE_EMAIL_USER_MODEL: ${{ matrix.emailuser }}

  test-postgres-elasticsearch:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - python: 3.7
            django: "Django>=3.0,<3.1"
            elasticsearch: 5.6.9
            elasticsearchpy: "elasticsearch>=5,<6"
            elasticsearchflag: "--elasticsearch5"
          - python: 3.8
            django: "Django>=3.1,<3.2"
            elasticsearch: 7.6.1
            elasticsearchpy: "elasticsearch>=7,<8"
            elasticsearchflag: "--elasticsearch7"

    services:
      postgres:
        image: postgres:10.8
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Configure sysctl limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144
      - uses: getong/elasticsearch-action@v1.2
        with:
          elasticsearch version: ${{ matrix.elasticsearch }}
          host port: 9200
          container port: 9200
          host node port: 9300
          node port: 9300
          discovery type: 'single-node'
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "psycopg2>=2.6"
          pip install "${{ matrix.django }}"
          pip install -e .[testing]
          pip install "${{ matrix.elasticsearchpy }}"
          pip install certifi
      - name: Test
        run: |
          ./runtests.py wagtail.search wagtail.documents wagtail.images ${{ matrix.elasticsearchflag }}
        env:
          DATABASE_ENGINE: django.db.backends.postgresql
          DATABASE_HOST: localhost
          DATABASE_USER: postgres
          DATABASE_PASS: postgres
          USE_EMAIL_USER_MODEL: ${{ matrix.emailuser }}
